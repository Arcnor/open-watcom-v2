name: release
description: ''
inputs:
  arch:
    description: ''
    required: false
    default: ''
    type: string
  tools:
    description: ''
    required: false
    default: ''
    type: string
  owdebug:
    description: ''
    required: false
    default: ''
    type: string
runs:
  using: composite
  steps:
##############################################
# load build tools for current architecture
##############################################
  - name: Load build tools
    uses: "./.github/actions/artfload"
    with:
      arch:     ${{ inputs.arch }}
      gitpath:  'build binbuild'
      artifact: "build ${{ inputs.arch }}"
      tools:    ${{ inputs.tools }}
##############################################
# load all parts(artifacts) of distribution
##############################################
  - name: Load full distribution
    uses: "./.github/actions/artfload"
    with:
      arch:     ${{ inputs.arch }}
      gitpath:  'distrib ow bin'
      artifact: 'distrib bin'
##############################################
# create daily release, delete existing one
##############################################
  - name: 'Prepare build information for Release'
    id: dreldata
    run: |
      echo "tag=Current-build" >> ${{ github.output }}
      echo "timestamp=$(date +'%Y-%m-%d %H:%M:%S')" >> ${{ github.output }}
    shell: bash
  - name: 'Remove daily Release if exists'
    uses: "./.github/actions/ghreldel"
    with:
      tag:     ${{ steps.dreldata.outputs.tag }}
      owdebug: ${{ inputs.owdebug }}
  - name: 'Create daily Release'
    id: newdrel
    uses: "./.github/actions/ghrelcre"
    with:
      note:    Last updated ${{ steps.dreldata.outputs.timestamp }}
      title:   ${{ steps.dreldata.outputs.tag }}
      tag:     ${{ steps.dreldata.outputs.tag }}
      tagmsg:  ${{ steps.dreldata.outputs.timestamp }}
      owdebug: ${{ inputs.owdebug }}
  - if: steps.newdrel.outputs.id != ''
    run: |
      echo "${{ steps.newdrel.outputs.id }}"
      Join-Path ${{ github.workspace }} distrib ow bin `
      | Get-ChildItem -File -Filter open-watcom-* `
      | Foreach-Object {
        $response = curl -s -L -X POST `
        "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.newdrel.outputs.id }}/assets?name=$($_.Name)" `
        -H "Accept: application/vnd.github+json" `
        -H "Authorization: Bearer ${{ github.token }}" `
        -H "X-GitHub-Api-Version: 2022-11-28" `
        -H "Content-Type: application/octet-stream" `
        --data-binary "@$($_.FullName)"
        if( "${{ inputs.owdebug }}" -eq '1' ) { $response }
      }
    shell: pwsh
  - if: steps.newdrel.outputs.id != ''
    run: |
      echo "${{ steps.newdrel.outputs.id }}"
      $fname = Join-Path ${{ github.workspace }} distrib ow bin ow-snapshot.tar.xz
      $response = curl -s -L -X POST `
      "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.newdrel.outputs.id }}/assets?name=ow-snapshot.tar.xz" `
      -H "Accept: application/vnd.github+json" `
      -H "Authorization: Bearer ${{ github.token }}" `
      -H "X-GitHub-Api-Version: 2022-11-28" `
      -H "Content-Type: application/octet-stream" `
      --data-binary "@$fname"
      if( "${{ inputs.owdebug }}" -eq '1' ) { $response }
    shell: pwsh
##############################################
# create monthly release, only if not exists
##############################################
  - name: 'Check monthly Release exists'
    id: mtag
    run: |
      mask=$(date +'%Y-%m')-[0-3][0-9]-Build
      echo "sha=$(git ls-remote --tags . | sed -n -e \"s:\([0-9a-z]*\) *refs/tags/${mask}^{}:\1:p\")" >> ${{ github.output }}
    shell: bash
  - if: steps.mtag.outputs.sha == ''
    name: 'Prepare information for monthly Release'
    id: mreldata
    run: |
      tagstamp=$(date +'%Y-%m-%d')
      echo "timestamp=$(date +'%Y-%m-%d %H:%M:%S')" >> ${{ github.output }}
      echo "tag=$tagstamp-Build" >> ${{ github.output }}
      echo "tagmsg=$tagstamp $tagstamp-Build" >> ${{ github.output }}
      echo "title=$tagstamp Build" >> ${{ github.output }}
    shell: bash
  - if: steps.mtag.outputs.sha == ''
    id: newmrel
    name: 'Create monthly Release'
    uses: "./.github/actions/ghrelcre"
    with:
      note:    Created ${{ steps.mreldata.outputs.timestamp }}
      title:   ${{ steps.mreldata.outputs.title }}
      tag:     ${{ steps.mreldata.outputs.tag }}
      tagmsg:  ${{ steps.mreldata.outputs.tagmsg }}
      owdebug: ${{ inputs.owdebug }}
  - if: steps.newmrel.outputs.id != ''
    run: |
      echo "${{ steps.newmrel.outputs.id }}"
      Join-Path ${{ github.workspace }} distrib ow bin `
      | Get-ChildItem -File -Filter open-watcom-* `
      | Foreach-Object {
        $response = curl -s -L -X POST `
        "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.newmrel.outputs.id }}/assets?name=$($_.Name)" `
        -H "Accept: application/vnd.github+json" `
        -H "Authorization: Bearer ${{ github.token }}" `
        -H "X-GitHub-Api-Version: 2022-11-28" `
        -H "Content-Type: application/octet-stream" `
        --data-binary "@$($_.FullName)"
        if( "${{ inputs.owdebug }}" -eq '1' ) { $response }
      }
    shell: pwsh
  - if: steps.newmrel.outputs.id != ''
    run: |
      echo "${{ steps.newmrel.outputs.id }}"
      $fname = Join-Path ${{ github.workspace }} distrib ow bin ow-snapshot.tar.xz
      $response = curl -s -L -X POST `
      "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.newmrel.outputs.id }}/assets?name=ow-snapshot.tar.xz" `
      -H "Accept: application/vnd.github+json" `
      -H "Authorization: Bearer ${{ github.token }}" `
      -H "X-GitHub-Api-Version: 2022-11-28" `
      -H "Content-Type: application/octet-stream" `
      --data-binary "@$fname"
      if( "${{ inputs.owdebug }}" -eq '1' ) { $response }
    shell: pwsh
