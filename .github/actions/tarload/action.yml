name: tar-load
description: ''
inputs:
  arch:
    description: ''
    required: false
    default: ''
    type: string
  gitpath:
    description: ''
    required: false
    default: ''
    type: string
  tarname:
    description: ''
    required: false
    default: ''
    type: string
  format:
    description: ''
    required: false
    default: ''
    type: string
runs:
  using: composite
  steps:
  - name: Get destination folder
    id: dstpath
    run: >
      Join-Path ${{ github.workspace }} ${{ inputs.gitpath }}
      | Join-String -OutputPrefix 'path='
      | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
    shell: pwsh
  - name: Create destination folder
    run: New-Item -ErrorAction SilentlyContinue -ItemType Directory -Path ${{ steps.dstpath.outputs.path }}
    shell: pwsh
  - if: inputs.arch == 'lnx' && inputs.format == 'gzip'
    name: Restore Artifact Linux
    run: tar -xzf "${{ inputs.tarname }}" --overwrite -C "${{ steps.dstpath.outputs.path }}"
    shell: bash
  - if: inputs.arch == 'lnx' && inputs.format != 'gzip'
    name: Restore Artifact Linux
    run: tar -xJf "${{ inputs.tarname }}" --overwrite -C "${{ steps.dstpath.outputs.path }}"
    shell: bash
  - if: inputs.arch == 'osx' && inputs.format == 'gzip'
    name: Restore Artifact OSX
    run: gtar -xzf "${{ inputs.tarname }}" --overwrite -C "${{ steps.dstpath.outputs.path }}"
    shell: bash
  - if: inputs.arch == 'osx' && inputs.format != 'gzip'
    name: Restore Artifact OSX
    run: gtar -xJf "${{ inputs.tarname }}" --overwrite -C "${{ steps.dstpath.outputs.path }}"
    shell: bash
  - if: inputs.arch == 'nt' && inputs.format == 'gzip'
    name: Restore Artifact (Windows)
    run: |
      7z x -aoa "${{ inputs.tarname }}" -o${{ steps.dstpath.outputs.path }}
    shell: cmd
  - if: inputs.arch == 'nt' && inputs.format != 'gzip'
    name: Restore Artifact (Windows)
    run: |
      7z x -txz "${{ inputs.tarname }}" -o${{ runner.temp }}
      tar -xf ${{ runner.temp }}\owartifact.tar -C "${{ steps.dstpath.outputs.path }}" *
      del ${{ runner.temp }}\owartifact.tar
    shell: cmd
